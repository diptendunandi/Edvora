{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Edvora-Task-Nearest-Ride-main\\\\src\\\\components\\\\Rides\\\\Ride.js\";\nimport styles from './Rides.module.css';\nimport map from '../../assets/map.png';\nimport { calcDistance } from '../../utils/helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ride = props => {\n  const {\n    id,\n    origin_station_code,\n    station_path,\n    date,\n    state,\n    city,\n    station_code\n  } = props;\n  const {\n    _map,\n    ride,\n    ride_d,\n    val,\n    badges,\n    badge\n  } = styles;\n  const d = new Date(date * 1000); // time\n\n  const _date = d.toDateString().split(\" \");\n\n  const _time = d.toTimeString().substring(0, 5);\n\n  const txtDate = `${_date[2]}th ${_date[1]} ${_date[3]} ${_time}`;\n  const distance = calcDistance(station_path, station_code);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"--container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ride,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: _map,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: map,\n          alt: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ride_d,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ride Id : \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: val,\n            children: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Origin Station : \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: val,\n            children: origin_station_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"station_path : \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: val,\n            children: `[${station_path.join(\", \")}]`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: val,\n            children: txtDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: val,\n            children: distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: badges,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: badge,\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: badge,\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Ride;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ride\");","map":{"version":3,"sources":["E:/react/Edvora-Task-Nearest-Ride-main/src/components/Rides/Ride.js"],"names":["styles","map","calcDistance","Ride","props","id","origin_station_code","station_path","date","state","city","station_code","_map","ride","ride_d","val","badges","badge","d","Date","_date","toDateString","split","_time","toTimeString","substring","txtDate","distance","join"],"mappings":"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","sourcesContent":["import styles from './Rides.module.css';\nimport map from '../../assets/map.png';\nimport { calcDistance } from '../../utils/helpers/helpers';\n\nexport const Ride = ( props ) => {\n\n    const { \n        id,\n        origin_station_code,\n        station_path,\n        date,\n        state,\n        city,\n        station_code\n    } = props;\n\n    const { _map, ride, ride_d, val, badges, badge } = styles;\n    const d = new Date( date * 1000 );\n\n\n    // time\n    const _date = d.toDateString().split(\" \");\n    const _time = d.toTimeString().substring(0, 5)\n    const txtDate =  `${ _date[2] }th ${ _date[1] } ${ _date[3] } ${ _time }` ;\n\n    const distance = calcDistance( station_path,  station_code );\n\n    return (\n        <div className='--container'>\n            <div className = { ride }>\n                <div className = { _map }>\n                    <img src = { map } alt = \"map\"/>\n                </div>\n\n                <div className = { ride_d }>\n                    <p>\n                        Ride Id : {\" \"}\n                        <span \n                        className = { val }>\n                            { id }\n                        </span>\n                    </p>\n\n                    <p>\n                        Origin Station : {\" \"}\n                        <span \n                        className = { val }>\n                            { origin_station_code }\n                        </span>\n                    </p>\n\n                    <p>\n                        station_path : {\" \"}\n                        <span \n                        className = { val }>\n                            { `[${ station_path.join(\", \") }]` }\n                        </span>\n                    </p>\n\n                    <p>\n                        Date: {\" \"}\n                        <span \n                        className = { val }>\n                            { txtDate }\n                        </span>\n                    </p>\n                    \n                    <p>\n                        Distance: {\" \"}\n                        <span \n                        className = { val }>\n                            { distance }\n                        </span>\n                    </p>\n                </div>\n\n\n                <div className = { badges }>\n                    <span className = { badge } >{ city }</span>\n                    <span className = { badge } >{ state }</span>\n                </div>\n            </div>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}